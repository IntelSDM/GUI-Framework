#pragma once
extern void DrawText(int x, int y, std::wstring text, std::string font, int fontsize, MyColour colour, FontAlignment alignment);
extern void OutlineCircle(int x, int y, float radius, float linewidth, MyColour colour);
extern void FilledCircle(int x, int y, float radius, MyColour colour);
extern void OutlineRectangle(int x, int y, int width, int height, int linewidth, MyColour colour);
extern void FilledRectangle(int x, int y, int width, int height, MyColour colour);
extern void OutlineRoundedRectangle(int x, int y, int width, int height, int linewidth, int rounding, MyColour colour);
extern void FilledRoundedRectangle(int x, int y, int width, int height, int rounding, MyColour colour);
extern void FilledLine(int xstart, int ystart, int xend, int yend, int width, MyColour colour);
extern void FilledLineAliased(int xstart, int ystart, int xend, int yend, int width, MyColour colour);
extern void DrawBitmap(ID2D1Bitmap* bmp, int x, int y, int width, int height);
extern void DrawBitmap(ID2D1Bitmap* bmp, int x, int y);
extern void SaturationSlider(int x, int y, int width, int height, MyColour colour);
extern void AlphaSlider(int x, int y, int width, int height, MyColour col);
extern void HueSlider(int x, int y, int width, int height);
extern void FilledTriangle(int x1, int y1, int x2, int y2, int x3, int y3, MyColour colour);
extern void CreateDirectXBitmap(const std::wstring& filename, ID2D1Bitmap** bmp);
extern void DrawBitmap(ID2D1Bitmap* bmp, int x, int y, int width, int height, float rotation);
extern void DrawBitmap(ID2D1Bitmap* bmp, int x, int y, int width, int height, float imageposx, float imageposy, float imagewidth, float imageheight);
extern void EndLayer();
extern void CreateLayer(float alpha);
extern void CreateLayer(int startx, int starty, int limitwidth, int limitheight);
extern void CreateLayer(int startx, int starty, int limitwidth, int limitheight, float alpha);